@use "style/colors";
@use "style/misc";
@use "sass:list";
@use "sass:map";
@use "sass:math";
@use "sass:color";

$gruvbox: map.values(colors.$gruvbox-map);
$gruvbox-filter: map.values(colors.$gruvbox-filter-map);
$amount-links: 4;
$amount-of-main-h2: 6;
$amount-photos: 3;
$photos-caption-height: 1.8rem;

:root {
  --main-h2-left-margin: 1rem;
  --photos-caption-height: 1.8rem;
}

* {
  padding: 0;
  margin: 0;
}

body {
  background-color: #d6d6d6;
  overflow-x: hidden;
  color: #444;
  width: 100vw;
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
}

article {
  width: 88ch;
  height: 90vh;
}

h1,
h2 {
  font-family: "Lexend", sans-serif;
  font-weight: bold;
}

span.h2-inline-footnote {
  font-size: 0.95rem;
  font-weight: normal;
  margin-left: 5px;
}

header {
  &.name-links-header {
    display: flex;
    align-items: center;
    margin: 0 var(--main-h2-left-margin);
    margin-bottom: 1rem;
  }

  &.name-links-header > h1 {
    font-size: 2.5rem;
  }
}

nav {
  &.personal-links {
    margin-left: auto;
  }

  &.personal-links > a {
    display: inline-block;
    width: 25px;
    height: 25px;
    margin-right: 5px;
  }

  &.personal-links > a > img {
    display: inherit;
    width: inherit;
    height: inherit;
    transition: filter 0.5s 0.1s linear;
  }

  @for $i from 1 through $amount-links {
    &.personal-links > a:nth-of-type(#{$i}) > img:hover {
      filter: #{list.nth($gruvbox-filter, $i % $amount-links + 1)};
    }
  }
}

main {
  > h2 {
    font-size: 1.8rem;
    margin-bottom: 0.8rem;
    margin-left: var(--main-h2-left-margin);
  }

  $delta: calc(60% / $amount-of-main-h2);
  @for $i from 1 through $amount-of-main-h2 {
    > h2:nth-of-type(#{$i})::after {
      content: "";
      display: block;
      background: linear-gradient(
        to right,
        #222 30%,
        #{list.nth($gruvbox, $i % $amount-of-main-h2 + 1)} 70%
      );
      width: calc(20% + #{$delta} * #{$i});
      height: 2px;
      border-radius: 1px;
      position: relative;
      bottom: -0.3rem;
      left: calc(var(--main-h2-left-margin) / 2 * -1);
    }
  }
}

div.synthesis {
  $radius: 0.6rem;
  display: inline-block;

  div.synthesis-photos-container {
    float: left;

    ol.photos-carrousel {
      width: 35ch;
      height: 46ch;
      position: relative;

      list-style: none;
      background-color: #eee;
      border-radius: $radius;
    }

    ol.photos-carrousel > {
      li,
      li > img {
        width: inherit;
        height: inherit;
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
      }

      li {
        border-radius: $radius;
        overflow: hidden;
        transition: clip-path 0.2s linear;
        clip-path: circle(100%);
      }

      li > img {
        height: initial;
      }

      $size: 1rem;
      $gap: 0.8rem;

      .select {
        content: "";
        position: absolute;
        width: $size;
        height: $size;
        bottom: ($photos-caption-height - ($photos-caption-height / 2 - $size / 2)) * -1;
        background: #222;
        transition:
          background 0.4s ease-in,
          clip-path 0.3s ease-out;
        clip-path: circle(30%);
      }

      .select:hover {
        cursor: pointer;
        clip-path: circle(38%);
      }

      .select.checked {
        clip-path: circle(45%);
      }

      @for $i from 1 through $amount-photos {
        $color: list.nth($gruvbox, $i % $amount-photos + 1);

        .select:nth-of-type(#{$i}) {
          right: $radius + ($size + $gap) * ($amount-photos - $i);
        }

        .select.checked:nth-of-type(#{$i}) {
          background: $color;
        }

        li:nth-of-type(#{$i}) {
          z-index: $amount-photos - ($i - 1);
        }
      }
    }

    div.photo-select-control {
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: row;
      height: $photos-caption-height;

      h2.synthesis-h2-title-photos-caption {
        margin-right: auto;
        font-weight: normal;
        font-size: 1rem;
        margin-left: $radius;
      }

      > img {
        display: inline-block;
        margin-right: $radius;
        @include misc.color-to-filter(#222);
      }

      > img[alt*="next" i] {
        transform: rotateY(180deg);
      }
    }
  }
}
